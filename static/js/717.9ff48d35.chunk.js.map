{"version":3,"file":"static/js/717.9ff48d35.chunk.js","mappings":"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","sources":["component/programme/component/form/Field.jsx","component/programme/component/form/Range.jsx","component/programme/component/form/Radio.jsx","function/initialeEnMajuscule.js","component/programme/component/Morphologie.jsx","component/programme/component/form/Help.jsx","component/programme/InfoGenerale.jsx"],"sourcesContent":["import { useContext } from \"react\"\r\nimport { ThemeContext } from \"../../../contexts/ThemeContext\"\r\n\r\nexport function Field({id, reference, signe, children}){\r\n\r\n    const {theme} = useContext(ThemeContext)\r\n\r\n    const style = theme === \"light\" ? {backgroundColor: \"white\"} : {backgroundColor: \"rgba(255, 255, 255, 0.7)\"}\r\n\r\n    return <div className=\"field\">\r\n        <label htmlFor={id}>{children} </label>\r\n        <input type=\"text\" id={id} name={id}ref={reference} style={style}/>\r\n        <span className=\"signe\">{signe}</span>\r\n    </div>\r\n}","import { useState } from \"react\"\r\n\r\nexport function Range({id, reference,  children}){\r\n\r\n    const [state, setState] = useState(4)\r\n\r\n    const handleChange = (e) =>{\r\n        setState(e.currentTarget.value)\r\n\r\n    }\r\n\r\n    return <div className=\"range\"> \r\n        <label htmlFor={id}>{children} <span className=\"nb_training\">{state}</span></label>\r\n        <input type=\"range\" \r\n                min= \"1\" max=\"6\" \r\n                name={id}\r\n                value={state}\r\n                onChange={handleChange}>\r\n        </input>\r\n            \r\n    </div>\r\n}","export function Radio({id, name, state, onCheck, children}){\r\n\r\n    return <div className=\"radio\">\r\n        \r\n        <input \r\n            type=\"radio\" \r\n            name={name} \r\n            id={id} \r\n            value={id}\r\n            checked={state === id ? true : false}\r\n            onChange={(e) => onCheck(e.target.id)}\r\n        />\r\n        \r\n        <label htmlFor={id}>{children}</label>\r\n    </div>\r\n}","export function initialeEnMajuscule(chaine) {\r\n    if (chaine.length === 0) {\r\n        return chaine; \r\n    }\r\n\r\n    return chaine.charAt(0).toUpperCase() + chaine.slice(1);\r\n}","import { Radio } from \"./form/Radio\"\r\nimport { initialeEnMajuscule } from \"../../../function/initialeEnMajuscule\"\r\n\r\n\r\nexport function Morphologie ({infos, state, onCheck, onClickHelp, children}){\r\n    return <div className=\"morphologie_bloc\">\r\n    <h4>{children}</h4><span className=\"what_is_it\" id={infos.name} onClick={(e) => onClickHelp(e.target.id)}>?</span>\r\n    <ul>\r\n        <li><Radio id={infos.id[0]} name={infos.name} state={state} onCheck={onCheck}>{initialeEnMajuscule(infos.id[0])}</Radio></li>\r\n        <li><Radio id={infos.id[1]} name={infos.name} state={state} onCheck={onCheck}>{initialeEnMajuscule(infos.id[1])}</Radio></li>\r\n    </ul>\r\n    \r\n</div>\r\n}","import { useEffect, useRef, useState } from \"react\"\r\nimport cage from \"../../../../imgs/program_imgs/cage.JPG\"\r\nimport clavicule from \"../../../../imgs/program_imgs/clavicule.jpg\"\r\nimport hanche from \"../../../../imgs/program_imgs/hanche.JPG\"\r\nimport ligne from \"../../../../imgs/program_imgs/ligne.JPG\"\r\n\r\nconst CARD = {\r\n    cage: {\r\n        img: cage,\r\n        text: `A gauche, de profil on constate que la cage thoracique a peu de volume. \r\n                Le sternum, os au milieu de la cage, est vertical. C'est une cage thoracique\r\n                plate. Si votre sternum est incliné, votre cage aura plutot tendance à etre\r\n                épaisse.`\r\n    },\r\n\r\n    epaule: {\r\n        img: clavicule,\r\n        text: `Il faut regarder ici la largeur de vos clavicules. Plus elles sont larges\r\n                plus vous aurez naturellement l'air carré. Lorsqu'elles sont étroires, \r\n                vos trapèzes (en rouge), paraîtront plus naturellement bombé.`\r\n    },\r\n\r\n    hanche: {\r\n        img: hanche,\r\n        text: `Plus les hanches seront étroites, plus votre taille paraîtra fine.\r\n                L'inverse pour les hanches larges.`\r\n    },\r\n\r\n    ligne: {\r\n        img: ligne,\r\n        text: `Il s'agit du ratio entre la taille du torse et des jambes. Pour faire \r\n                simple, les longilignes ont des jambes et des bras long, image de gauche.\r\n                C'est l'inverse pour les brévilignes.`\r\n    },\r\n\r\n    all: \"Images et dessins de Frédéric Delavier\"\r\n}\r\n\r\nexport function Help({what}){\r\n\r\n    const [size, setSize] = useState(0)\r\n\r\n    const helpRef = useRef()\r\n\r\n    const card = CARD[what]\r\n\r\n    const cardResizing = ()=>{\r\n        if(window.innerWidth > 600){\r\n            const x = window.innerWidth*0.2\r\n            helpRef.current.style.width = x + \"px\"\r\n            setSize(x)\r\n        }else{\r\n            const x = window.innerWidth*0.8\r\n            helpRef.current.style.width = x + \"px\"\r\n            setSize(x)\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    useEffect(()=>{\r\n\r\n        cardResizing()\r\n\r\n        window.addEventListener(\"resize\", cardResizing)\r\n\r\n        return () =>{\r\n            window.removeEventListener(\"resize\", cardResizing)\r\n        }\r\n    }, [])\r\n\r\n\r\n    return <div className=\"help\" ref={helpRef}>\r\n        <img src={card.img} width={size}></img>\r\n        <p className=\"legend\">{CARD.all}</p>\r\n        <p className=\"text\">{card.text}</p>\r\n    </div>\r\n}","import { useContext, useRef, useState} from \"react\"\r\nimport { Field } from \"./component/form/Field\"\r\nimport { Range } from \"./component/form/Range\"\r\nimport { Radio } from \"./component/form/Radio\"\r\nimport { Morphologie } from \"./component/Morphologie\"\r\nimport { Help } from \"./component/form/Help\"\r\n\r\nimport { exerciceAssignation } from \"./function/exerciceAssignation\"\r\nimport { ThemeContext } from \"../contexts/ThemeContext\"\r\n\r\n\r\nconst controlField = function(ref, canSend){\r\n    \r\n    if(isNaN(ref.current.value) || ref.current.value===\"\"){\r\n        canSend[0] = false\r\n        ref.current.classList.add(\"bad_input\")\r\n    }else ref.current.classList.remove(\"bad_input\")\r\n}\r\n\r\n\r\n\r\nexport default function InfoGenerale ({setInfo, setPage}){\r\n\r\n\r\n    const [sexeState, setSexeState] = useState(\"h\")\r\n    const [objectifState, setObjectifState] = useState(\"pdm\")\r\n    const [activityState, setActivityState] = useState(\"low\")\r\n    const [ligneState, setLigneState] = useState(\"longiligne\")\r\n    const [cageState, setCageState] = useState(\"plate\")\r\n    const [epauleState, setEpauleState] = useState(\"large\")\r\n    const [hancheState, setHancheState] = useState(\"Large\")\r\n\r\n    const [help, setHelp] = useState(\"ligne\")\r\n\r\n    const ageRef = useRef()\r\n    const tailleRef = useRef()\r\n    const poidsRef = useRef()\r\n\r\n    const {theme} = useContext(ThemeContext)\r\n\r\n\r\n    const submit = (e) =>{\r\n        e.preventDefault()\r\n        const datas = new FormData(e.target)\r\n\r\n        let canSend = [true]\r\n \r\n        controlField(ageRef, canSend)\r\n        controlField(tailleRef, canSend)\r\n        controlField(poidsRef, canSend)\r\n\r\n        if(canSend[0]){\r\n            setInfo(prevInfo => ({\r\n                ...prevInfo, \r\n                generale: {\r\n                    age: parseInt(datas.get(\"age\")),\r\n                    taille: parseInt(datas.get(\"taille\")),\r\n                    poids: parseInt(datas.get(\"poids\")),\r\n                    sexe: sexeState,\r\n                    objectif: objectifState,\r\n                    training: parseInt(datas.get(\"nbTraining\")),\r\n                    activity: activityState,\r\n                    ligne: ligneState,\r\n                    cage: cageState,\r\n                    epaule: epauleState,\r\n                    hanche: hancheState\r\n                }\r\n            }))\r\n\r\n\r\n            setPage(\"resultat\") \r\n\r\n        }\r\n\r\n    }\r\n\r\n    return <>\r\n        <form className=\"info_generale\" onSubmit={submit}>\r\n\r\n            <div className={`bloc program_field bloc_${theme}`}>\r\n                <h3>Quelques infos perso...</h3>\r\n                <Field id={\"age\"} reference={ageRef} signe={\"an.s\"}>{\"Age\"}</Field>\r\n                <Field id={\"taille\"} reference={tailleRef} signe={\"cm\"}>{\"Taille\"}</Field>\r\n                <Field id={\"poids\"} reference={poidsRef} signe={\"kg\"}>{\"Poids\"}</Field>\r\n                <div className=\"sexe_bloc\">\r\n                    <Radio id={\"h\"} name={\"sexe\"} state={sexeState} onCheck={setSexeState}>\r\n                            Homme\r\n                    </Radio>\r\n                    <Radio id={\"f\"} name={\"sexe\"} state={sexeState} onCheck={setSexeState}>\r\n                            Femme\r\n                    </Radio>\r\n                </div>\r\n                <div className=\"objectif\">\r\n                    <h3>...et ton objectif</h3>\r\n                    <ul className=\"objectif_list\">\r\n                        <li>\r\n                            <Radio id={\"pdm\"} name={\"objectif\"} state={objectifState} onCheck={setObjectifState}>\r\n                                Prise de poids/ muscle\r\n                            </Radio>\r\n                        </li>\r\n                        <li>\r\n                            <Radio id={\"seche\"} name={\"objectif\"} state={objectifState} onCheck={setObjectifState}>\r\n                                Maigrir\r\n                            </Radio>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                \r\n                \r\n            </div>\r\n\r\n            \r\n            <div className={`bloc program_activity bloc_${theme}`}>\r\n                <h3>Dans la vie en général je...</h3>\r\n                <ul className=\"radio_organizer\">\r\n                    <li>\r\n                        <Radio id={\"low\"} name={\"activity\"} state={activityState} onCheck={setActivityState}>\r\n                            Bouge très peu (assis la plupart du temps et je marche peu)\r\n                        </Radio>\r\n                    </li>\r\n                    <li>\r\n                        <Radio id={\"medium\"} name={\"activity\"} state={activityState} onCheck={setActivityState}>\r\n                            Bouge (souvent debout - métier debout, marche etc...)\r\n                        </Radio>\r\n                    </li>\r\n                    <li>\r\n                        <Radio id={\"high\"} name={\"activity\"} state={activityState} onCheck={setActivityState}>\r\n                            Bouge beaucoup (activité journalière physique - metier physique)\r\n                        </Radio>\r\n                    </li>\r\n                </ul>\r\n                \r\n            </div>\r\n                \r\n            <div className={`bloc program_training bloc_${theme}`}>\r\n                <Range id={\"nbTraining\"} ><h3>Nombre d'entraînement désiré</h3></Range>\r\n            </div>\r\n\r\n            <div className={`bloc program_morpho bloc_${theme}`}>\r\n                <h3>Analyse morphologique rapide</h3>\r\n                \r\n                <p>\r\n                    La section suivante aura pour but de déterminer votre morphologie, vous deriez donc\r\n                    prendre des photos de vous au moins de face et de profil \r\n                    (ou vous regarder dans le miroir dans ces positions)\r\n                </p>\r\n\r\n\r\n                <Morphologie \r\n                    infos={{\r\n                        id: [\"longiligne\", \"breviligne\"],\r\n                        name: \"ligne\"\r\n                        }}\r\n                        \r\n                    state={ligneState}\r\n                    onCheck={setLigneState}\r\n                    onClickHelp={setHelp}\r\n                >Commençons par votre ligne...</Morphologie>\r\n\r\n                <Morphologie \r\n                    infos={{\r\n                        id: [\"plate\", \"epaisse\"],\r\n                        name: \"cage\"\r\n                        }}\r\n                            \r\n                    state={cageState}\r\n                    onCheck={setCageState}\r\n                    onClickHelp={setHelp}\r\n                >Ensuite, la forme de votre cage thoracique...</Morphologie>\r\n\r\n                <Morphologie \r\n                    infos={{\r\n                        id: [\"large\", \"etroite\"],\r\n                        name: \"epaule\"\r\n                        }}\r\n                            \r\n                    state={epauleState}\r\n                    onCheck={setEpauleState}\r\n                    onClickHelp={setHelp}\r\n                >Puis la largeur de vos épaules</Morphologie>\r\n\r\n                <Morphologie \r\n                    infos={{\r\n                        id: [\"Large\", \"Etroite\"],\r\n                        name: \"hanche\"\r\n                        }}\r\n                            \r\n                    state={hancheState}\r\n                    onCheck={setHancheState}\r\n                    onClickHelp={setHelp}\r\n                >Enfin votre largeur de hanche</Morphologie>\r\n\r\n                <Help what={help}></Help>\r\n\r\n                <button className=\"send_button\">Envoyer</button>\r\n            </div>\r\n   \r\n            \r\n            \r\n        </form>\r\n        \r\n\r\n\r\n    </>\r\n}\r\n"],"names":["Field","_ref","id","reference","signe","children","style","useContext","ThemeContext","theme","backgroundColor","_jsxs","className","htmlFor","_jsx","type","name","ref","Range","_useState","useState","_useState2","_slicedToArray","state","setState","min","max","value","onChange","e","currentTarget","Radio","onCheck","checked","target","initialeEnMajuscule","chaine","length","charAt","toUpperCase","slice","Morphologie","infos","onClickHelp","onClick","CARD","cage","img","text","epaule","hanche","ligne","all","Help","what","size","setSize","helpRef","useRef","card","cardResizing","window","innerWidth","x","current","width","useEffect","addEventListener","removeEventListener","src","controlField","canSend","isNaN","classList","add","remove","InfoGenerale","setInfo","setPage","sexeState","setSexeState","_useState3","_useState4","objectifState","setObjectifState","_useState5","_useState6","activityState","setActivityState","_useState7","_useState8","ligneState","setLigneState","_useState9","_useState10","cageState","setCageState","_useState11","_useState12","epauleState","setEpauleState","_useState13","_useState14","hancheState","setHancheState","_useState15","_useState16","help","setHelp","ageRef","tailleRef","poidsRef","_Fragment","onSubmit","preventDefault","datas","FormData","prevInfo","_objectSpread","generale","age","parseInt","get","taille","poids","sexe","objectif","training","activity","concat"],"sourceRoot":""}